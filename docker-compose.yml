services:

  ####### ZOOKEEPER
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    restart: on-failure:10
    hostname: zookeeper
    container_name: zookeeper
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      retries: 10
      interval: 20s
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-txn-logs:/var/lib/zookeeper/log
    networks:
      - kafka-nifi

  ####### KAFKA
  kafka0:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka0
    hostname: kafka0
    restart: on-failure:10
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka0:29092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_DOCKER_INTERNAL'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka0-data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - kafka-nifi

  kafka1:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka1
    hostname: kafka1
    restart: on-failure:10
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:29091,LISTENER_DOCKER_EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_DOCKER_INTERNAL'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka1-data:/var/lib/kafka/data
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - kafka-nifi

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka0:29092,kafka1:29091
    depends_on:
      - kafka0
      - kafka1
    networks:
      - kafka-nifi

  ####### NIFI
  nifi0:
    image: apache/nifi:1.26.0
    container_name: nifi0
    hostname: nifi0
    restart: on-failure:10
    ports:
      - "6980:8080"
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=1 min
      - NIFI_SENSITIVE_PROPS_KEY=MySuperSecretKey
    depends_on:
      - schema-registry
    volumes:
      - nifi0-data:/opt/nifi/nifi-current/flowfile_repository
      - nifi0-data:/opt/nifi/nifi-current/content_repository
      - nifi0-data:/opt/nifi/nifi-current/database_repository
      - nifi0-data:/opt/nifi/nifi-current/provenance_repository
      - ./hadoop/core-site.xml:/opt/nifi/nifi-current/core-site.xml
      - ./hadoop/hdfs-site.xml:/opt/nifi/nifi-current/hdfs-site.xml
    networks:
      - kafka-nifi
      - nifi-hadoop

  nifi1:
    image: apache/nifi:1.26.0
    container_name: nifi1
    hostname: nifi1
    restart: on-failure:10
    ports:
      - "6979:8080"
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=1 min
      - NIFI_SENSITIVE_PROPS_KEY=MySuperSecretKey
    depends_on:
      - schema-registry
    volumes:
      - nifi1-data:/opt/nifi/nifi-current/flowfile_repository
      - nifi1-data:/opt/nifi/nifi-current/content_repository
      - nifi1-data:/opt/nifi/nifi-current/database_repository
      - nifi1-data:/opt/nifi/nifi-current/provenance_repository
      - ./hadoop/core-site.xml:/opt/nifi/nifi-current/core-site.xml
      - ./hadoop/hdfs-site.xml:/opt/nifi/nifi-current/hdfs-site.xml
    networks:
      - kafka-nifi
      - nifi-hadoop

  ####### HADOOP    
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: on-failure:10
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - hadoop_home:/home
    environment:
      - CLUSTER_NAME=data-flow
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - nifi-hadoop
      - hadoop-spark

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    restart: on-failure:10
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: "hdfs://namenode:9000"
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - nifi-hadoop
      - hadoop-spark

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    restart: on-failure:10
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: "hdfs://namenode:9000"
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - nifi-hadoop
      - hadoop-spark
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: on-failure:10
    ports:
      - "8088:8088"
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864"
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - nifi-hadoop
      - hadoop-spark

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: on-failure:10
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 resourcemanager:8088"
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - nifi-hadoop
      - hadoop-spark
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: on-failure:10
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - nifi-hadoop
      - hadoop-spark

  ####### SPARK
  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    depends_on:
      - namenode
      - datanode1
    ports:
      - "8090:8090"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - hadoop-spark

  spark-worker-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    networks:
      - hadoop-spark
      
  ####### JUPYTER      
  jupyter-notebook:
    image: huusy/jupyter-notebook:latest
    container_name: jupyter-notebook
    ports:
      - "8888:8888"
      - "4040:4040"
    depends_on:
      - spark-master
      - spark-worker-1
    volumes:
      - shared-workspace:/opt/workspace
    networks:
     - hadoop-spark

volumes:
  zk-data:
  zk-txn-logs:
  kafka0-data:
  kafka1-data:
  nifi0-data:
  nifi1-data:
  hadoop_namenode:
  hadoop_home:
  hadoop_datanode1:
  hadoop_datanode2:
  hadoop_historyserver:
  shared-workspace:

networks:
  kafka-nifi:
    driver: bridge
  nifi-hadoop:
    driver: bridge
  hadoop-spark:
    driver: bridge